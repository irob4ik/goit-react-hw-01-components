{"version":3,"sources":["components/profile/profile.module.css","components/statistics/statistics.module.css","components/friend-list/friendlist.module.css","components/transaction-history/transactions.module.css","container.module.css","components/profile/Profile.js","components/statistics/Statistics.js","components/friend-list/FriendList.js","components/transaction-history/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","profile","description","src","alt","width","counter","label","quantity","counter2","defaultProps","Statistics","title","styles","statistics","statslist","map","stat","item","style","backgroundColor","randomColor","widthCalc","length","percentage","id","rc","i","Math","floor","random","toString","el","FriendList","friends","friendList","friend","isOnline","statusOn","statusOff","TransactionHistory","items","transactionTable","type","amount","currency","App","baseStyles","container","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.152a9a4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3_gQt\",\"description\":\"profile_description__2EHRJ\",\"avatar\":\"profile_avatar__dirDa\",\"name\":\"profile_name__3chp3\",\"tag\":\"profile_tag__17Qik\",\"location\":\"profile_location__3Vm5u\",\"stats\":\"profile_stats__3v_1L\",\"counter\":\"profile_counter__38wMG\",\"counter2\":\"profile_counter2__3I_ar profile_counter__38wMG\",\"quantity\":\"profile_quantity__2G63H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__Rsmmf\",\"title\":\"statistics_title__2Ak9I\",\"statslist\":\"statistics_statslist__qUvPm\",\"item\":\"statistics_item__2LCPt\",\"label\":\"statistics_label__1kJsF\",\"percentage\":\"statistics_percentage__3qmW9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"friendlist_friendList__3enHw\",\"item\":\"friendlist_item__3rLf9\",\"statusOn\":\"friendlist_statusOn__2goEA\",\"statusOff\":\"friendlist_statusOff__2l2ZG friendlist_statusOn__2goEA\",\"avatar\":\"friendlist_avatar__1xP07\",\"name\":\"friendlist_name__14_WQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionTable\":\"transactions_transactionTable__1JuT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__xlW7i\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport profile from './profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats: { followers, views, likes }}) => {\r\n    return (\r\n        <div className={profile.profile}>\r\n            <div className={profile.description}>\r\n                <img\r\n                    src={avatar}\r\n                    alt=\"Profile avatar\"\r\n                    className={profile.avatar}\r\n                    width=\"120\"\r\n                />\r\n                <p className={profile.name}>{name}</p>\r\n                <p className={profile.tag}>@{tag}</p>\r\n                <p className={profile.location}>{location}</p>\r\n            </div>\r\n\r\n            <ul className={profile.stats}>\r\n                <li className={profile.counter}>\r\n                    <span className={profile.label}>Followers</span>\r\n                    <span className={profile.quantity}>{followers}</span>\r\n                </li >\r\n                <li className={profile.counter2}>\r\n                    <span className={profile.label}>Views</span>\r\n                    <span className={profile.quantity}>{views}</span>\r\n                </li>\r\n                <li className={profile.counter}>\r\n                    <span className={profile.label}>Likes</span>\r\n                    <span className={profile.quantity}>{likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nProfile.defaultProps = {\r\n    tag: \"abrakadabra\",\r\n    location: \"unknown\",\r\n};\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './statistics.module.css'\r\n\r\nconst Statistics = ({title, stats}) => (\r\n    <section className={styles.statistics}>\r\n        {title && (<h2 className={styles.title}>{title}</h2>)}\r\n        \r\n        <ul className={styles.statslist}>\r\n            {stats.map(stat => (\r\n                <li className={styles.item}\r\n                    key={stat.id}\r\n                    style={{\r\n                        backgroundColor: randomColor(),\r\n                        width: widthCalc(stats.length)\r\n                    }}>\r\n                    <span className={styles.label}>{stat.label}</span>\r\n                    <span className={styles.percentage}>{stat.percentage}%</span>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </section>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n    title: \"\",\r\n};\r\n\r\nStatistics.propTypes = {\r\n    stats: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired,\r\n    })).isRequired,\r\n};\r\n\r\nfunction randomColor() {\r\n    let rc = \"#\";\r\n    for(let i=0;i<6;i++){\r\n        rc += Math.floor(Math.random()*16).toString(16);\r\n    }\r\n    return rc;\r\n}\r\n\r\nfunction widthCalc(el) {\r\n    const newWidth = 300 / el;\r\n    return newWidth;\r\n}\r\n\r\nexport default Statistics;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './friendlist.module.css';\r\n\r\nconst FriendList = ({ friends }) => (\r\n    <ul className={styles.friendList}>\r\n        {friends.map(friend => (\r\n            <li className={styles.item} key={friend.id}>\r\n                {friend.isOnline ? (\r\n                    <span className={styles.statusOn}></span>\r\n                ) : (\r\n                    <span className={styles.statusOff}></span>   \r\n                )}                \r\n                <img className={styles.avatar} src={friend.avatar} alt={friend.name} width=\"48\" />\r\n                <p className={styles.name}>{friend.name}</p>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        avatar: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        isOnline: PropTypes.bool.isRequired,\r\n    })).isRequired,\r\n};\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './transactions.module.css';\r\n\r\nconst TransactionHistory = ({items}) => (\r\n    <table className={styles.transactionTable}>\r\n        <thead>\r\n            <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Currency</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {items.map(item => (\r\n               <tr key={item.id}>\r\n                    <td>{item.type}</td>\r\n                    <td>{item.amount}</td>\r\n                    <td>{item.currency}</td>\r\n                </tr> \r\n            ))}\r\n        </tbody>\r\n    </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        amount: PropTypes.string.isRequired,\r\n        currency: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;","import React from 'react';\r\n\r\nimport Profile from './components/profile/Profile';\r\nimport user from './components/profile/user.json';\r\n\r\nimport Statistics from './components/statistics/Statistics';\r\nimport statisticalData from './components/statistics/statistics-data.json';\r\n\r\nimport FriendList from './components/friend-list/FriendList';\r\nimport friends from './components/friend-list/friends.json';\r\n\r\nimport TransactionHistory from './components/transaction-history/TransactionHistory';\r\nimport transactions from './components/transaction-history/transactions.json';\r\n\r\nimport baseStyles from './container.module.css';\r\n\r\nconst App = () => (\r\n        <div className={baseStyles.container}>\r\n            <Profile\r\n            name={user.name}\r\n            tag={user.tag}\r\n            location={user.location}\r\n            avatar={user.avatar}\r\n            stats={user.stats}                \r\n            />\r\n        \r\n            <Statistics\r\n            title=\"Upload stats\"\r\n            stats={statisticalData}            \r\n            />\r\n        \r\n            <FriendList\r\n            friends={friends}\r\n            />\r\n            \r\n            <TransactionHistory\r\n            items={transactions}\r\n            />\r\n        </div>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}